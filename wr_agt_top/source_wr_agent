class source_wr_agent extends uvm_agent;

                `uvm_component_utils(source_wr_agent)


        source_wr_driver drvh;
        source_wr_monitor monh;
        source_wr_sequencer seqrh;
        source_config src_cfg;



        extern function new(string name = "source_wr_agent",uvm_component parent);
        extern function void build_phase(uvm_phase phase);
        extern function void connect_phase(uvm_phase phase);
endclass


//-----------------  constructor new method  -------------------//

function source_wr_agent::new(string name="source_wr_agent",uvm_component parent);
        super.new(name,parent);
endfunction:new



   function void source_wr_agent::build_phase(uvm_phase phase);
        super.build_phase(phase);
        //`uvm_info("Source_AGENT","This is Build Phase ", UVM_LOW)
                monh=source_wr_monitor::type_id::create("monh",this);
                if(!uvm_config_db #(source_config)::get(this,"","source_config",src_cfg))
                        `uvm_fatal(get_type_name(),"error");
                if(src_cfg.is_active==UVM_ACTIVE)
                seqrh=source_wr_sequencer::type_id::create("seqrh",this);
                drvh=source_wr_driver::type_id::create("drvh",this);
        endfunction:build_phase
function void source_wr_agent::connect_phase(uvm_phase phase);
        if(src_cfg.is_active==UVM_ACTIVE)
        begin
        drvh.seq_item_port.connect(seqrh.seq_item_export);
        end
endfunction
