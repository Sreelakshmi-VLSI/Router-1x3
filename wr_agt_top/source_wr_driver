class source_wr_driver extends uvm_driver #(source_write_xtn);


   // Factory Registration
        `uvm_component_utils(source_wr_driver)
         source_config src_cfg;
        virtual router_if.SDRV_MP vif;



        extern function new(string name = "source_wr_driver",uvm_component parent);
        extern function void build_phase(uvm_phase phase);
        extern task run_phase(uvm_phase phase);
        extern function void connect_phase(uvm_phase phase);
        extern task send_to_dut(source_write_xtn req);
endclass


//-----------------  constructor new method  -------------------//
//Add code for new()
function source_wr_driver::new(string name="source_wr_driver",uvm_component parent);
        super.new(name,parent);
endfunction:new

      function void source_wr_driver::build_phase(uvm_phase phase);
        super.build_phase(phase);
        if(!uvm_config_db #(source_config)::get(this,"","source_config",src_cfg))
                `uvm_fatal(get_type_name(),"error");

                endfunction:build_phase

function void source_wr_driver::connect_phase(uvm_phase phase);
vif=src_cfg.vif;
endfunction
task source_wr_driver::run_phase(uvm_phase phase);
@(vif.src_drv_cb)
vif.src_drv_cb.resetn<=1'b0;
@(vif.src_drv_cb)
vif.src_drv_cb.resetn<=1'b1;


forever
begin
seq_item_port.get_next_item(req);
send_to_dut(req);
seq_item_port.item_done();
end
endtask


task source_wr_driver::send_to_dut(source_write_xtn req);
`uvm_info("ROUTER_WR_DRIVER",$sformatf("printing from driver \n %s", req.sprint()),UVM_LOW)

while(vif.src_drv_cb.busy!==0)
@(vif.src_drv_cb);
vif.src_drv_cb.pkt_valid<=1'b1;
vif.src_drv_cb.data_in<=req.header;
@(vif.src_drv_cb);
foreach(req.payload[i])
begin
while(vif.src_drv_cb.busy!==0)
@(vif.src_drv_cb);
vif.src_drv_cb.data_in<=req.payload[i];
@(vif.src_drv_cb);
end
vif.src_drv_cb.pkt_valid<=1'b0;
vif.src_drv_cb.data_in<=req.parity;
//req.print;

repeat(2)
@(vif.src_drv_cb);
req.err<=vif.src_drv_cb.err;
@(vif.src_drv_cb);

endtask
